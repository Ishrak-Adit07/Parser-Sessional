Terminals unused in grammar

    DO
    SWITCH
    DEFAULT
    BREAK
    CASE
    CONTINUE
    CONST_CHAR
    MAIN
    CHAR
    DOUBLE
    BITOP
    SINGLE_LINE_STRING
    MULTI_LINE_STRING
    UNFINISHED_STRING
    MULTI_LINE_COMMENT
    UNFINISHED_COMMENT
    SINGLE_LINE_COMMENT
    UNFINISHED_NUMBER
    TOO_MANY_DECIMAL_POINTS
    ILLFORMED_NUMBER
    EMPTY_CONST_CHAR
    UNFINISHED_CONST_CHAR
    MULTICHAR_CONST_CHAR
    UNRECOGNIZED_CHAR
    INVALID_ID_SUFFIX_NUM_PREFIX


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    8                 | type_specifier ID embedded LPAREN RPAREN embedded_out_dec SEMICOLON

    9 func_definition: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_def compound_statement
   10                | type_specifier ID embedded LPAREN RPAREN embedded_out_def compound_statement

   11 embedded: ε

   12 embedded_out_dec: ε

   13 embedded_out_def: ε

   14 parameter_list: parameter_list COMMA type_specifier ID
   15               | parameter_list COMMA type_specifier
   16               | type_specifier id
   17               | type_specifier

   18 compound_statement: LCURL embedded_in statements RCURL
   19                   | LCURL embedded_in RCURL

   20 embedded_in: ε

   21 var_declaration: type_specifier declaration_list SEMICOLON

   22 type_specifier: INT
   23               | FLOAT
   24               | VOID

   25 id: ID

   26 declaration_list: declaration_list COMMA ID
   27                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   28                 | ID
   29                 | id LTHIRD CONST_INT RTHIRD

   30 statements: statement
   31           | statements statement

   32 statement: var_declaration
   33          | expression_statement
   34          | compound_statement
   35          | FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement
   36          | IF LPAREN expression embedded_exp RPAREN embedded_void statement
   37          | IF LPAREN expression embedded_exp RPAREN embedded_void statement ELSE statement
   38          | WHILE LPAREN expression embedded_exp RPAREN embedded_void statement
   39          | PRINTLN LPAREN ID RPAREN SEMICOLON
   40          | RETURN expression SEMICOLON

   41 embedded_exp: ε

   42 embedded_void: ε

   43 expression_statement: SEMICOLON
   44                     | expression SEMICOLON

   45 variable: ID
   46         | id LTHIRD expression RTHIRD

   47 expression: logic_expression
   48           | variable ASSIGNOP logic_expression

   49 logic_expression: rel_expression
   50                 | rel_expression LOGICOP rel_expression

   51 rel_expression: simple_expression
   52               | simple_expression RELOP simple_expression

   53 simple_expression: term
   54                  | simple_expression ADDOP term

   55 term: unary_expression
   56     | term MULOP unary_expression

   57 unary_expression: ADDOP unary_expression
   58                 | NOT unary_expression
   59                 | factor

   60 factor: variable
   61       | ID LPAREN argument_list RPAREN
   62       | LPAREN expression RPAREN
   63       | CONST_INT
   64       | CONST_FLOAT
   65       | variable INCOP
   66       | variable DECOP

   67 argument_list: arguments
   68              | ε

   69 arguments: arguments COMMA logic_expression
   70          | logic_expression


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST_INT (258) 27 29 63
    CONST_FLOAT (259) 64
    ID (260) 7 8 9 10 14 25 26 27 28 39 45 61
    DO (261)
    SWITCH (262)
    DEFAULT (263)
    BREAK (264)
    CASE (265)
    CONTINUE (266)
    CONST_CHAR (267)
    INT (268) 22
    FLOAT (269) 23
    VOID (270) 24
    IF (271) 36 37
    ELSE (272) 37
    FOR (273) 35
    WHILE (274) 38
    PRINTLN (275) 39
    RETURN (276) 40
    MAIN (277)
    CHAR (278)
    DOUBLE (279)
    ASSIGNOP (280) 48
    NOT (281) 58
    INCOP (282) 65
    DECOP (283) 66
    LOGICOP (284) 50
    RELOP (285) 52
    ADDOP (286) 54 57
    MULOP (287) 56
    BITOP (288)
    LPAREN (289) 7 8 9 10 35 36 37 38 39 61 62
    RPAREN (290) 7 8 9 10 35 36 37 38 39 61 62
    LCURL (291) 18 19
    RCURL (292) 18 19
    LTHIRD (293) 27 29 46
    RTHIRD (294) 27 29 46
    COMMA (295) 14 15 26 27 69
    SEMICOLON (296) 7 8 21 39 40 43 44
    SINGLE_LINE_STRING (297)
    MULTI_LINE_STRING (298)
    UNFINISHED_STRING (299)
    MULTI_LINE_COMMENT (300)
    UNFINISHED_COMMENT (301)
    SINGLE_LINE_COMMENT (302)
    UNFINISHED_NUMBER (303)
    TOO_MANY_DECIMAL_POINTS (304)
    ILLFORMED_NUMBER (305)
    EMPTY_CONST_CHAR (306)
    UNFINISHED_CONST_CHAR (307)
    MULTICHAR_CONST_CHAR (308)
    UNRECOGNIZED_CHAR (309)
    INVALID_ID_SUFFIX_NUM_PREFIX (310)
    LOWER_THAN_ELSE (311)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    start (58)
        on left: 1
        on right: 0
    program (59)
        on left: 2 3
        on right: 1 2
    unit (60)
        on left: 4 5 6
        on right: 2 3
    func_declaration (61)
        on left: 7 8
        on right: 5
    func_definition (62)
        on left: 9 10
        on right: 6
    embedded (63)
        on left: 11
        on right: 7 8 9 10
    embedded_out_dec (64)
        on left: 12
        on right: 7 8
    embedded_out_def (65)
        on left: 13
        on right: 9 10
    parameter_list (66)
        on left: 14 15 16 17
        on right: 7 9 14 15
    compound_statement (67)
        on left: 18 19
        on right: 9 10 34
    embedded_in (68)
        on left: 20
        on right: 18 19
    var_declaration (69)
        on left: 21
        on right: 4 32
    type_specifier (70)
        on left: 22 23 24
        on right: 7 8 9 10 14 15 16 17 21
    id (71)
        on left: 25
        on right: 16 29 46
    declaration_list (72)
        on left: 26 27 28 29
        on right: 21 26 27
    statements (73)
        on left: 30 31
        on right: 18 31
    statement (74)
        on left: 32 33 34 35 36 37 38 39 40
        on right: 30 31 35 36 37 38
    embedded_exp (75)
        on left: 41
        on right: 35 36 37 38
    embedded_void (76)
        on left: 42
        on right: 35 36 37 38
    expression_statement (77)
        on left: 43 44
        on right: 33 35
    variable (78)
        on left: 45 46
        on right: 48 60 65 66
    expression (79)
        on left: 47 48
        on right: 35 36 37 38 40 44 46 62
    logic_expression (80)
        on left: 49 50
        on right: 47 48 69 70
    rel_expression (81)
        on left: 51 52
        on right: 49 50
    simple_expression (82)
        on left: 53 54
        on right: 51 52 54
    term (83)
        on left: 55 56
        on right: 53 54 56
    unary_expression (84)
        on left: 57 58 59
        on right: 55 56 57 58
    factor (85)
        on left: 60 61 62 63 64 65 66
        on right: 59
    argument_list (86)
        on left: 67 68
        on right: 61
    arguments (87)
        on left: 69 70
        on right: 67 69


State 0

    0 $accept: • start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   22 type_specifier: INT •

    $default  reduce using rule 22 (type_specifier)


State 2

   23 type_specifier: FLOAT •

    $default  reduce using rule 23 (type_specifier)


State 3

   24 type_specifier: VOID •

    $default  reduce using rule 24 (type_specifier)


State 4

    0 $accept: start • $end

    $end  shift, and go to state 11


State 5

    1 start: program •
    2 program: program • unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit •

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration •

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition •

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration •

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier • ID embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    8                 | type_specifier • ID embedded LPAREN RPAREN embedded_out_dec SEMICOLON
    9 func_definition: type_specifier • ID embedded LPAREN parameter_list RPAREN embedded_out_def compound_statement
   10                | type_specifier • ID embedded LPAREN RPAREN embedded_out_def compound_statement
   21 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 13

    id                go to state 14
    declaration_list  go to state 15


State 11

    0 $accept: start $end •

    $default  accept


State 12

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID • embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    8                 | type_specifier ID • embedded LPAREN RPAREN embedded_out_dec SEMICOLON
    9 func_definition: type_specifier ID • embedded LPAREN parameter_list RPAREN embedded_out_def compound_statement
   10                | type_specifier ID • embedded LPAREN RPAREN embedded_out_def compound_statement
   25 id: ID •
   28 declaration_list: ID •

    LPAREN    reduce using rule 11 (embedded)
    LTHIRD    reduce using rule 25 (id)
    $default  reduce using rule 28 (declaration_list)

    embedded  go to state 16


State 14

   29 declaration_list: id • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 17


State 15

   21 var_declaration: type_specifier declaration_list • SEMICOLON
   26 declaration_list: declaration_list • COMMA ID
   27                 | declaration_list • COMMA ID LTHIRD CONST_INT RTHIRD

    COMMA      shift, and go to state 18
    SEMICOLON  shift, and go to state 19


State 16

    7 func_declaration: type_specifier ID embedded • LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    8                 | type_specifier ID embedded • LPAREN RPAREN embedded_out_dec SEMICOLON
    9 func_definition: type_specifier ID embedded • LPAREN parameter_list RPAREN embedded_out_def compound_statement
   10                | type_specifier ID embedded • LPAREN RPAREN embedded_out_def compound_statement

    LPAREN  shift, and go to state 20


State 17

   29 declaration_list: id LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 21


State 18

   26 declaration_list: declaration_list COMMA • ID
   27                 | declaration_list COMMA • ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 22


State 19

   21 var_declaration: type_specifier declaration_list SEMICOLON •

    $default  reduce using rule 21 (var_declaration)


State 20

    7 func_declaration: type_specifier ID embedded LPAREN • parameter_list RPAREN embedded_out_dec SEMICOLON
    8                 | type_specifier ID embedded LPAREN • RPAREN embedded_out_dec SEMICOLON
    9 func_definition: type_specifier ID embedded LPAREN • parameter_list RPAREN embedded_out_def compound_statement
   10                | type_specifier ID embedded LPAREN • RPAREN embedded_out_def compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 23

    parameter_list  go to state 24
    type_specifier  go to state 25


State 21

   29 declaration_list: id LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 26


State 22

   26 declaration_list: declaration_list COMMA ID •
   27                 | declaration_list COMMA ID • LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 27

    $default  reduce using rule 26 (declaration_list)


State 23

    8 func_declaration: type_specifier ID embedded LPAREN RPAREN • embedded_out_dec SEMICOLON
   10 func_definition: type_specifier ID embedded LPAREN RPAREN • embedded_out_def compound_statement

    LCURL     reduce using rule 13 (embedded_out_def)
    $default  reduce using rule 12 (embedded_out_dec)

    embedded_out_dec  go to state 28
    embedded_out_def  go to state 29


State 24

    7 func_declaration: type_specifier ID embedded LPAREN parameter_list • RPAREN embedded_out_dec SEMICOLON
    9 func_definition: type_specifier ID embedded LPAREN parameter_list • RPAREN embedded_out_def compound_statement
   14 parameter_list: parameter_list • COMMA type_specifier ID
   15               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 30
    COMMA   shift, and go to state 31


State 25

   16 parameter_list: type_specifier • id
   17               | type_specifier •

    ID  shift, and go to state 32

    $default  reduce using rule 17 (parameter_list)

    id  go to state 33


State 26

   29 declaration_list: id LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 29 (declaration_list)


State 27

   27 declaration_list: declaration_list COMMA ID LTHIRD • CONST_INT RTHIRD

    CONST_INT  shift, and go to state 34


State 28

    8 func_declaration: type_specifier ID embedded LPAREN RPAREN embedded_out_dec • SEMICOLON

    SEMICOLON  shift, and go to state 35


State 29

   10 func_definition: type_specifier ID embedded LPAREN RPAREN embedded_out_def • compound_statement

    LCURL  shift, and go to state 36

    compound_statement  go to state 37


State 30

    7 func_declaration: type_specifier ID embedded LPAREN parameter_list RPAREN • embedded_out_dec SEMICOLON
    9 func_definition: type_specifier ID embedded LPAREN parameter_list RPAREN • embedded_out_def compound_statement

    LCURL     reduce using rule 13 (embedded_out_def)
    $default  reduce using rule 12 (embedded_out_dec)

    embedded_out_dec  go to state 38
    embedded_out_def  go to state 39


State 31

   14 parameter_list: parameter_list COMMA • type_specifier ID
   15               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 40


State 32

   25 id: ID •

    $default  reduce using rule 25 (id)


State 33

   16 parameter_list: type_specifier id •

    $default  reduce using rule 16 (parameter_list)


State 34

   27 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT • RTHIRD

    RTHIRD  shift, and go to state 41


State 35

    8 func_declaration: type_specifier ID embedded LPAREN RPAREN embedded_out_dec SEMICOLON •

    $default  reduce using rule 8 (func_declaration)


State 36

   18 compound_statement: LCURL • embedded_in statements RCURL
   19                   | LCURL • embedded_in RCURL

    $default  reduce using rule 20 (embedded_in)

    embedded_in  go to state 42


State 37

   10 func_definition: type_specifier ID embedded LPAREN RPAREN embedded_out_def compound_statement •

    $default  reduce using rule 10 (func_definition)


State 38

    7 func_declaration: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_dec • SEMICOLON

    SEMICOLON  shift, and go to state 43


State 39

    9 func_definition: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_def • compound_statement

    LCURL  shift, and go to state 36

    compound_statement  go to state 44


State 40

   14 parameter_list: parameter_list COMMA type_specifier • ID
   15               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 45

    $default  reduce using rule 15 (parameter_list)


State 41

   27 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD •

    $default  reduce using rule 27 (declaration_list)


State 42

   18 compound_statement: LCURL embedded_in • statements RCURL
   19                   | LCURL embedded_in • RCURL

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    RCURL        shift, and go to state 57
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statements            go to state 63
    statement             go to state 64
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 43

    7 func_declaration: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON •

    $default  reduce using rule 7 (func_declaration)


State 44

    9 func_definition: type_specifier ID embedded LPAREN parameter_list RPAREN embedded_out_def compound_statement •

    $default  reduce using rule 9 (func_definition)


State 45

   14 parameter_list: parameter_list COMMA type_specifier ID •

    $default  reduce using rule 14 (parameter_list)


State 46

   63 factor: CONST_INT •

    $default  reduce using rule 63 (factor)


State 47

   64 factor: CONST_FLOAT •

    $default  reduce using rule 64 (factor)


State 48

   25 id: ID •
   45 variable: ID •
   61 factor: ID • LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 74

    LTHIRD    reduce using rule 25 (id)
    $default  reduce using rule 45 (variable)


State 49

   36 statement: IF • LPAREN expression embedded_exp RPAREN embedded_void statement
   37          | IF • LPAREN expression embedded_exp RPAREN embedded_void statement ELSE statement

    LPAREN  shift, and go to state 75


State 50

   35 statement: FOR • LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    LPAREN  shift, and go to state 76


State 51

   38 statement: WHILE • LPAREN expression embedded_exp RPAREN embedded_void statement

    LPAREN  shift, and go to state 77


State 52

   39 statement: PRINTLN • LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 78


State 53

   40 statement: RETURN • expression SEMICOLON

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 79
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 54

   58 unary_expression: NOT • unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                go to state 62
    variable          go to state 80
    unary_expression  go to state 81
    factor            go to state 73


State 55

   57 unary_expression: ADDOP • unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                go to state 62
    variable          go to state 80
    unary_expression  go to state 82
    factor            go to state 73


State 56

   62 factor: LPAREN • expression RPAREN

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 83
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 57

   19 compound_statement: LCURL embedded_in RCURL •

    $default  reduce using rule 19 (compound_statement)


State 58

   43 expression_statement: SEMICOLON •

    $default  reduce using rule 43 (expression_statement)


State 59

   34 statement: compound_statement •

    $default  reduce using rule 34 (statement)


State 60

   32 statement: var_declaration •

    $default  reduce using rule 32 (statement)


State 61

   21 var_declaration: type_specifier • declaration_list SEMICOLON

    ID  shift, and go to state 84

    id                go to state 14
    declaration_list  go to state 15


State 62

   46 variable: id • LTHIRD expression RTHIRD

    LTHIRD  shift, and go to state 85


State 63

   18 compound_statement: LCURL embedded_in statements • RCURL
   31 statements: statements • statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    RCURL        shift, and go to state 86
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statement             go to state 87
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 64

   30 statements: statement •

    $default  reduce using rule 30 (statements)


State 65

   33 statement: expression_statement •

    $default  reduce using rule 33 (statement)


State 66

   48 expression: variable • ASSIGNOP logic_expression
   60 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    ASSIGNOP  shift, and go to state 88
    INCOP     shift, and go to state 89
    DECOP     shift, and go to state 90

    $default  reduce using rule 60 (factor)


State 67

   44 expression_statement: expression • SEMICOLON

    SEMICOLON  shift, and go to state 91


State 68

   47 expression: logic_expression •

    $default  reduce using rule 47 (expression)


State 69

   49 logic_expression: rel_expression •
   50                 | rel_expression • LOGICOP rel_expression

    LOGICOP  shift, and go to state 92

    $default  reduce using rule 49 (logic_expression)


State 70

   51 rel_expression: simple_expression •
   52               | simple_expression • RELOP simple_expression
   54 simple_expression: simple_expression • ADDOP term

    RELOP  shift, and go to state 93
    ADDOP  shift, and go to state 94

    $default  reduce using rule 51 (rel_expression)


State 71

   53 simple_expression: term •
   56 term: term • MULOP unary_expression

    MULOP  shift, and go to state 95

    $default  reduce using rule 53 (simple_expression)


State 72

   55 term: unary_expression •

    $default  reduce using rule 55 (term)


State 73

   59 unary_expression: factor •

    $default  reduce using rule 59 (unary_expression)


State 74

   61 factor: ID LPAREN • argument_list RPAREN

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    $default  reduce using rule 68 (argument_list)

    id                 go to state 62
    variable           go to state 80
    logic_expression   go to state 96
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73
    argument_list      go to state 97
    arguments          go to state 98


State 75

   36 statement: IF LPAREN • expression embedded_exp RPAREN embedded_void statement
   37          | IF LPAREN • expression embedded_exp RPAREN embedded_void statement ELSE statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 99
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 76

   35 statement: FOR LPAREN • expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    SEMICOLON    shift, and go to state 58

    id                    go to state 62
    expression_statement  go to state 100
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 77

   38 statement: WHILE LPAREN • expression embedded_exp RPAREN embedded_void statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 101
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 78

   39 statement: PRINTLN LPAREN • ID RPAREN SEMICOLON

    ID  shift, and go to state 102


State 79

   40 statement: RETURN expression • SEMICOLON

    SEMICOLON  shift, and go to state 103


State 80

   60 factor: variable •
   65       | variable • INCOP
   66       | variable • DECOP

    INCOP  shift, and go to state 89
    DECOP  shift, and go to state 90

    $default  reduce using rule 60 (factor)


State 81

   58 unary_expression: NOT unary_expression •

    $default  reduce using rule 58 (unary_expression)


State 82

   57 unary_expression: ADDOP unary_expression •

    $default  reduce using rule 57 (unary_expression)


State 83

   62 factor: LPAREN expression • RPAREN

    RPAREN  shift, and go to state 104


State 84

   25 id: ID •
   28 declaration_list: ID •

    LTHIRD    reduce using rule 25 (id)
    $default  reduce using rule 28 (declaration_list)


State 85

   46 variable: id LTHIRD • expression RTHIRD

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 105
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 86

   18 compound_statement: LCURL embedded_in statements RCURL •

    $default  reduce using rule 18 (compound_statement)


State 87

   31 statements: statements statement •

    $default  reduce using rule 31 (statements)


State 88

   48 expression: variable ASSIGNOP • logic_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 80
    logic_expression   go to state 106
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 89

   65 factor: variable INCOP •

    $default  reduce using rule 65 (factor)


State 90

   66 factor: variable DECOP •

    $default  reduce using rule 66 (factor)


State 91

   44 expression_statement: expression SEMICOLON •

    $default  reduce using rule 44 (expression_statement)


State 92

   50 logic_expression: rel_expression LOGICOP • rel_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 80
    rel_expression     go to state 107
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 93

   52 rel_expression: simple_expression RELOP • simple_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 80
    simple_expression  go to state 108
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 94

   54 simple_expression: simple_expression ADDOP • term

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                go to state 62
    variable          go to state 80
    term              go to state 109
    unary_expression  go to state 72
    factor            go to state 73


State 95

   56 term: term MULOP • unary_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                go to state 62
    variable          go to state 80
    unary_expression  go to state 110
    factor            go to state 73


State 96

   70 arguments: logic_expression •

    $default  reduce using rule 70 (arguments)


State 97

   61 factor: ID LPAREN argument_list • RPAREN

    RPAREN  shift, and go to state 111


State 98

   67 argument_list: arguments •
   69 arguments: arguments • COMMA logic_expression

    COMMA  shift, and go to state 112

    $default  reduce using rule 67 (argument_list)


State 99

   36 statement: IF LPAREN expression • embedded_exp RPAREN embedded_void statement
   37          | IF LPAREN expression • embedded_exp RPAREN embedded_void statement ELSE statement

    $default  reduce using rule 41 (embedded_exp)

    embedded_exp  go to state 113


State 100

   35 statement: FOR LPAREN expression_statement • embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    $default  reduce using rule 41 (embedded_exp)

    embedded_exp  go to state 114


State 101

   38 statement: WHILE LPAREN expression • embedded_exp RPAREN embedded_void statement

    $default  reduce using rule 41 (embedded_exp)

    embedded_exp  go to state 115


State 102

   39 statement: PRINTLN LPAREN ID • RPAREN SEMICOLON

    RPAREN  shift, and go to state 116


State 103

   40 statement: RETURN expression SEMICOLON •

    $default  reduce using rule 40 (statement)


State 104

   62 factor: LPAREN expression RPAREN •

    $default  reduce using rule 62 (factor)


State 105

   46 variable: id LTHIRD expression • RTHIRD

    RTHIRD  shift, and go to state 117


State 106

   48 expression: variable ASSIGNOP logic_expression •

    $default  reduce using rule 48 (expression)


State 107

   50 logic_expression: rel_expression LOGICOP rel_expression •

    $default  reduce using rule 50 (logic_expression)


State 108

   52 rel_expression: simple_expression RELOP simple_expression •
   54 simple_expression: simple_expression • ADDOP term

    ADDOP  shift, and go to state 94

    $default  reduce using rule 52 (rel_expression)


State 109

   54 simple_expression: simple_expression ADDOP term •
   56 term: term • MULOP unary_expression

    MULOP  shift, and go to state 95

    $default  reduce using rule 54 (simple_expression)


State 110

   56 term: term MULOP unary_expression •

    $default  reduce using rule 56 (term)


State 111

   61 factor: ID LPAREN argument_list RPAREN •

    $default  reduce using rule 61 (factor)


State 112

   69 arguments: arguments COMMA • logic_expression

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 80
    logic_expression   go to state 118
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 113

   36 statement: IF LPAREN expression embedded_exp • RPAREN embedded_void statement
   37          | IF LPAREN expression embedded_exp • RPAREN embedded_void statement ELSE statement

    RPAREN  shift, and go to state 119


State 114

   35 statement: FOR LPAREN expression_statement embedded_exp • embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    $default  reduce using rule 42 (embedded_void)

    embedded_void  go to state 120


State 115

   38 statement: WHILE LPAREN expression embedded_exp • RPAREN embedded_void statement

    RPAREN  shift, and go to state 121


State 116

   39 statement: PRINTLN LPAREN ID RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 122


State 117

   46 variable: id LTHIRD expression RTHIRD •

    $default  reduce using rule 46 (variable)


State 118

   69 arguments: arguments COMMA logic_expression •

    $default  reduce using rule 69 (arguments)


State 119

   36 statement: IF LPAREN expression embedded_exp RPAREN • embedded_void statement
   37          | IF LPAREN expression embedded_exp RPAREN • embedded_void statement ELSE statement

    $default  reduce using rule 42 (embedded_void)

    embedded_void  go to state 123


State 120

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void • expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    SEMICOLON    shift, and go to state 58

    id                    go to state 62
    expression_statement  go to state 124
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 121

   38 statement: WHILE LPAREN expression embedded_exp RPAREN • embedded_void statement

    $default  reduce using rule 42 (embedded_void)

    embedded_void  go to state 125


State 122

   39 statement: PRINTLN LPAREN ID RPAREN SEMICOLON •

    $default  reduce using rule 39 (statement)


State 123

   36 statement: IF LPAREN expression embedded_exp RPAREN embedded_void • statement
   37          | IF LPAREN expression embedded_exp RPAREN embedded_void • statement ELSE statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statement             go to state 126
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 124

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement • embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement

    $default  reduce using rule 41 (embedded_exp)

    embedded_exp  go to state 127


State 125

   38 statement: WHILE LPAREN expression embedded_exp RPAREN embedded_void • statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statement             go to state 128
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 126

   36 statement: IF LPAREN expression embedded_exp RPAREN embedded_void statement •
   37          | IF LPAREN expression embedded_exp RPAREN embedded_void statement • ELSE statement

    ELSE  shift, and go to state 129

    $default  reduce using rule 36 (statement)


State 127

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp • embedded_void expression embedded_exp embedded_void RPAREN statement

    $default  reduce using rule 42 (embedded_void)

    embedded_void  go to state 130


State 128

   38 statement: WHILE LPAREN expression embedded_exp RPAREN embedded_void statement •

    $default  reduce using rule 38 (statement)


State 129

   37 statement: IF LPAREN expression embedded_exp RPAREN embedded_void statement ELSE • statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statement             go to state 131
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 130

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void • expression embedded_exp embedded_void RPAREN statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56

    id                 go to state 62
    variable           go to state 66
    expression         go to state 132
    logic_expression   go to state 68
    rel_expression     go to state 69
    simple_expression  go to state 70
    term               go to state 71
    unary_expression   go to state 72
    factor             go to state 73


State 131

   37 statement: IF LPAREN expression embedded_exp RPAREN embedded_void statement ELSE statement •

    $default  reduce using rule 37 (statement)


State 132

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression • embedded_exp embedded_void RPAREN statement

    $default  reduce using rule 41 (embedded_exp)

    embedded_exp  go to state 133


State 133

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp • embedded_void RPAREN statement

    $default  reduce using rule 42 (embedded_void)

    embedded_void  go to state 134


State 134

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void • RPAREN statement

    RPAREN  shift, and go to state 135


State 135

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN • statement

    CONST_INT    shift, and go to state 46
    CONST_FLOAT  shift, and go to state 47
    ID           shift, and go to state 48
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    IF           shift, and go to state 49
    FOR          shift, and go to state 50
    WHILE        shift, and go to state 51
    PRINTLN      shift, and go to state 52
    RETURN       shift, and go to state 53
    NOT          shift, and go to state 54
    ADDOP        shift, and go to state 55
    LPAREN       shift, and go to state 56
    LCURL        shift, and go to state 36
    SEMICOLON    shift, and go to state 58

    compound_statement    go to state 59
    var_declaration       go to state 60
    type_specifier        go to state 61
    id                    go to state 62
    statement             go to state 136
    expression_statement  go to state 65
    variable              go to state 66
    expression            go to state 67
    logic_expression      go to state 68
    rel_expression        go to state 69
    simple_expression     go to state 70
    term                  go to state 71
    unary_expression      go to state 72
    factor                go to state 73


State 136

   35 statement: FOR LPAREN expression_statement embedded_exp embedded_void expression_statement embedded_exp embedded_void expression embedded_exp embedded_void RPAREN statement •

    $default  reduce using rule 35 (statement)
