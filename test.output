Nonterminals useless in grammar

    func_definition
    embedded_out_def
    compound_statement
    embedded_in


Terminals unused in grammar

    CONST_INT
    CONST_FLOAT
    DO
    SWITCH
    DEFAULT
    BREAK
    CASE
    CONTINUE
    CONST_CHAR
    IF
    ELSE
    FOR
    WHILE
    PRINTLN
    RETURN
    MAIN
    CHAR
    DOUBLE
    ASSIGNOP
    NOT
    INCOP
    DECOP
    LOGICOP
    RELOP
    ADDOP
    MULOP
    BITOP
    LCURL
    RCURL
    LTHIRD
    RTHIRD
    SINGLE_LINE_STRING
    MULTI_LINE_STRING
    UNFINISHED_STRING
    MULTI_LINE_COMMENT
    UNFINISHED_COMMENT
    SINGLE_LINE_COMMENT
    UNFINISHED_NUMBER
    TOO_MANY_DECIMAL_POINTS
    ILLFORMED_NUMBER
    EMPTY_CONST_CHAR
    UNFINISHED_CONST_CHAR
    MULTICHAR_CONST_CHAR
    UNRECOGNIZED_CHAR
    INVALID_ID_SUFFIX_NUM_PREFIX
    LOWER_THAN_ELSE


Rules useless in grammar

   17 func_definition: type_specifier id embedded LPAREN parameter_list RPAREN embedded_out_def compound_statement
   18                | type_specifier id embedded LPAREN RPAREN embedded_out_def compound_statement

   19 embedded_out_def: ε

   20 compound_statement: LCURL embedded_in RCURL

   21 embedded_in: ε


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: func_declaration

    5 func_declaration: type_specifier id embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    6                 | type_specifier id embedded LPAREN RPAREN embedded_out_dec SEMICOLON

    7 embedded: ε

    8 embedded_out_dec: ε

    9 parameter_list: parameter_list COMMA type_specifier id
   10               | parameter_list COMMA type_specifier
   11               | type_specifier id
   12               | type_specifier

   13 type_specifier: INT
   14               | FLOAT
   15               | VOID

   16 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    CONST_INT (258)
    CONST_FLOAT (259)
    ID (260) 16
    DO (261)
    SWITCH (262)
    DEFAULT (263)
    BREAK (264)
    CASE (265)
    CONTINUE (266)
    CONST_CHAR (267)
    INT (268) 13
    FLOAT (269) 14
    VOID (270) 15
    IF (271)
    ELSE (272)
    FOR (273)
    WHILE (274)
    PRINTLN (275)
    RETURN (276)
    MAIN (277)
    CHAR (278)
    DOUBLE (279)
    ASSIGNOP (280)
    NOT (281)
    INCOP (282)
    DECOP (283)
    LOGICOP (284)
    RELOP (285)
    ADDOP (286)
    MULOP (287)
    BITOP (288)
    LPAREN (289) 5 6
    RPAREN (290) 5 6
    LCURL (291)
    RCURL (292)
    LTHIRD (293)
    RTHIRD (294)
    COMMA (295) 9 10
    SEMICOLON (296) 5 6
    SINGLE_LINE_STRING (297)
    MULTI_LINE_STRING (298)
    UNFINISHED_STRING (299)
    MULTI_LINE_COMMENT (300)
    UNFINISHED_COMMENT (301)
    SINGLE_LINE_COMMENT (302)
    UNFINISHED_NUMBER (303)
    TOO_MANY_DECIMAL_POINTS (304)
    ILLFORMED_NUMBER (305)
    EMPTY_CONST_CHAR (306)
    UNFINISHED_CONST_CHAR (307)
    MULTICHAR_CONST_CHAR (308)
    UNRECOGNIZED_CHAR (309)
    INVALID_ID_SUFFIX_NUM_PREFIX (310)
    LOWER_THAN_ELSE (311)


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    start (58)
        on left: 1
        on right: 0
    program (59)
        on left: 2 3
        on right: 1 2
    unit (60)
        on left: 4
        on right: 2 3
    func_declaration (61)
        on left: 5 6
        on right: 4
    embedded (62)
        on left: 7
        on right: 5 6
    embedded_out_dec (63)
        on left: 8
        on right: 5 6
    parameter_list (64)
        on left: 9 10 11 12
        on right: 5 9 10
    type_specifier (65)
        on left: 13 14 15
        on right: 5 6 9 10 11 12
    id (66)
        on left: 16
        on right: 5 6 9 11


State 0

    0 $accept: • start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    type_specifier    go to state 8


State 1

   13 type_specifier: INT •

    $default  reduce using rule 13 (type_specifier)


State 2

   14 type_specifier: FLOAT •

    $default  reduce using rule 14 (type_specifier)


State 3

   15 type_specifier: VOID •

    $default  reduce using rule 15 (type_specifier)


State 4

    0 $accept: start • $end

    $end  shift, and go to state 9


State 5

    1 start: program •
    2 program: program • unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 10
    func_declaration  go to state 7
    type_specifier    go to state 8


State 6

    3 program: unit •

    $default  reduce using rule 3 (program)


State 7

    4 unit: func_declaration •

    $default  reduce using rule 4 (unit)


State 8

    5 func_declaration: type_specifier • id embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    6                 | type_specifier • id embedded LPAREN RPAREN embedded_out_dec SEMICOLON

    ID  shift, and go to state 11

    id  go to state 12


State 9

    0 $accept: start $end •

    $default  accept


State 10

    2 program: program unit •

    $default  reduce using rule 2 (program)


State 11

   16 id: ID •

    $default  reduce using rule 16 (id)


State 12

    5 func_declaration: type_specifier id • embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    6                 | type_specifier id • embedded LPAREN RPAREN embedded_out_dec SEMICOLON

    $default  reduce using rule 7 (embedded)

    embedded  go to state 13


State 13

    5 func_declaration: type_specifier id embedded • LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON
    6                 | type_specifier id embedded • LPAREN RPAREN embedded_out_dec SEMICOLON

    LPAREN  shift, and go to state 14


State 14

    5 func_declaration: type_specifier id embedded LPAREN • parameter_list RPAREN embedded_out_dec SEMICOLON
    6                 | type_specifier id embedded LPAREN • RPAREN embedded_out_dec SEMICOLON

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 15

    parameter_list  go to state 16
    type_specifier  go to state 17


State 15

    6 func_declaration: type_specifier id embedded LPAREN RPAREN • embedded_out_dec SEMICOLON

    $default  reduce using rule 8 (embedded_out_dec)

    embedded_out_dec  go to state 18


State 16

    5 func_declaration: type_specifier id embedded LPAREN parameter_list • RPAREN embedded_out_dec SEMICOLON
    9 parameter_list: parameter_list • COMMA type_specifier id
   10               | parameter_list • COMMA type_specifier

    RPAREN  shift, and go to state 19
    COMMA   shift, and go to state 20


State 17

   11 parameter_list: type_specifier • id
   12               | type_specifier •

    ID  shift, and go to state 11

    $default  reduce using rule 12 (parameter_list)

    id  go to state 21


State 18

    6 func_declaration: type_specifier id embedded LPAREN RPAREN embedded_out_dec • SEMICOLON

    SEMICOLON  shift, and go to state 22


State 19

    5 func_declaration: type_specifier id embedded LPAREN parameter_list RPAREN • embedded_out_dec SEMICOLON

    $default  reduce using rule 8 (embedded_out_dec)

    embedded_out_dec  go to state 23


State 20

    9 parameter_list: parameter_list COMMA • type_specifier id
   10               | parameter_list COMMA • type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 24


State 21

   11 parameter_list: type_specifier id •

    $default  reduce using rule 11 (parameter_list)


State 22

    6 func_declaration: type_specifier id embedded LPAREN RPAREN embedded_out_dec SEMICOLON •

    $default  reduce using rule 6 (func_declaration)


State 23

    5 func_declaration: type_specifier id embedded LPAREN parameter_list RPAREN embedded_out_dec • SEMICOLON

    SEMICOLON  shift, and go to state 25


State 24

    9 parameter_list: parameter_list COMMA type_specifier • id
   10               | parameter_list COMMA type_specifier •

    ID  shift, and go to state 11

    $default  reduce using rule 10 (parameter_list)

    id  go to state 26


State 25

    5 func_declaration: type_specifier id embedded LPAREN parameter_list RPAREN embedded_out_dec SEMICOLON •

    $default  reduce using rule 5 (func_declaration)


State 26

    9 parameter_list: parameter_list COMMA type_specifier id •

    $default  reduce using rule 9 (parameter_list)
